CREATE DATABASE PortfolioProject;
GO

USE PortfolioProject;
GO

SELECT location, date,total_cases, new_cases, total_deaths, population
FROM PortfolioProject ..CovidDeaths
ORDER by 1,2

--total cases vs totoal deaths
SELECT location, date,total_cases, total_deaths, (total_deaths/total_cases) *100 as DeathPercentage
FROM PortfolioProject ..CovidDeaths
WHERE location like '%states%'
WHERE total_deaths is not null
ORDER by 1,2

--total cases vs population
SELECT location, date,total_cases, population, (total_cases/population) *100 as DeathPercentage
FROM PortfolioProject ..CovidDeaths
WHERE location like '%states%'
ORDER by 1,2

--looking at countries with highest infection rate Compared to Population 
SELECT location,  population, MAX(total_cases) as HighestInfectionCount,MAX((total_cases/population)) *100 as PopulationInfected
--WHERE location like '%states%'
FROM PortfolioProject ..CovidDeaths
GROUP BY location, population
ORDER by PopulationInfected

--countries  with highest death count
SELECT location,  MAX(cast(total_deaths as int)) as TotalDeathCount
--WHERE location like '%states%'
FROM PortfolioProject ..CovidDeaths
GROUP BY location
ORDER by TotalDeathCount

--breaking things down by Continent 
SELECT continent,  MAX(cast(Total_deaths as int)) as TotalDeathCount
--WHERE location like '%states%'
FROM PortfolioProject ..CovidDeaths
WHERE continent is not null
GROUP BY continent
ORDER by TotalDeathCount desc


--breaking things down by location 
SELECT location,  MAX(cast(Total_deaths as int)) as TotalDeathCount
--WHERE location like '%states%'
FROM PortfolioProject ..CovidDeaths
WHERE continent is  null
GROUP BY location
ORDER by TotalDeathCount desc

   
--Global Numbers 
SELECT  (CAST(new_cases as int)) as total_cases, 
SUM(CAST(new_deaths as int)) as total_deaths, 
SUM(CAST(new_deaths as int))/SUM(CAST(new_cases as int))
*100 as DeathPercentage
FROM PortfolioProject ..CovidDeaths
--WHERE location like '%states%'
WHERE continent is not null
--GROUP by date
ORDER by 1,2


-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths dea
Join PortfolioProject..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
order by 2,3

-- Using CTE to perform Calculation on Partition By in previous query

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths dea
Join PortfolioProject..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
--order by 2,3
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac

-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths dea
Join PortfolioProject..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
--where dea.continent is not null 
--order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated




-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths dea
Join PortfolioProject..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 